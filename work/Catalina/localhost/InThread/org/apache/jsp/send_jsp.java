/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.40
 * Generated at: 2025-05-18 12:52:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.google.api.services.gmail.model.Message;
import java.util.List;
import java.util.Base64;
import java.nio.charset.StandardCharsets;

public final class send_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Base64");
    _jspx_imports_classes.add("com.google.api.services.gmail.model.Message");
    _jspx_imports_classes.add("java.nio.charset.StandardCharsets");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("  <meta charset=\"UTF-8\">\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("  <title>Inthread - Email Client</title>\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n");
      out.write("  <link rel=\"stylesheet\" href=\"css/style.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("  <div class=\"app-container\">\n");
      out.write("    <!-- Header -->\n");
      out.write("    <header class=\"app-header\">\n");
      out.write("      <div class=\"header-left\">\n");
      out.write("        <button class=\"menu-toggle\" id=\"menuToggle\" aria-label=\"Toggle sidebar\">\n");
      out.write("          <i class=\"fas fa-bars\"></i>\n");
      out.write("        </button>\n");
      out.write("        <div class=\"logo\">\n");
      out.write("          <i class=\"fas fa-at\"></i>\n");
      out.write("          <span>Inthread</span>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"search-bar\">\n");
      out.write("        <div class=\"search-container\">\n");
      out.write("          <i class=\"fas fa-search\"></i>\n");
      out.write("          <input type=\"text\" placeholder=\"Search emails, contacts, or files...\" aria-label=\"Search emails\">\n");
      out.write("          <button class=\"search-tools\" aria-label=\"Search options\">\n");
      out.write("            <i class=\"fas fa-sliders\"></i>\n");
      out.write("          </button>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"header-right\">\n");
      out.write("        <button class=\"header-icon\" title=\"Support\" aria-label=\"Support\">\n");
      out.write("          <i class=\"fas fa-question-circle\"></i>\n");
      out.write("        </button>\n");
      out.write("        <button class=\"header-icon\" id=\"settingsBtn\" title=\"Settings\" aria-label=\"Settings\">\n");
      out.write("          <i class=\"fas fa-cog\"></i>\n");
      out.write("        </button>\n");
      out.write("        <div class=\"user-avatar\" role=\"button\" aria-label=\"User profile\">\n");
      out.write("          <img src=\"https://ui-avatars.com/api/?name=");
      out.print( session.getAttribute("profileName") != null ? session.getAttribute("profileName") : "Guest" );
      out.write("&background=random\" alt=\"User avatar\">\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </header>\n");
      out.write("\n");
      out.write("    <!-- Main Content -->\n");
      out.write("    <div class=\"app-main\">\n");
      out.write("      <!-- Sidebar -->\n");
      out.write("      <aside class=\"app-sidebar\" id=\"appSidebar\">\n");
      out.write("        <div class=\"sidebar-header\">\n");
      out.write("          <div class=\"user-profile\">\n");
      out.write("            <div class=\"user-avatar\">\n");
      out.write("              <img src=\"https://ui-avatars.com/api/?name=");
      out.print( session.getAttribute("profileName") != null ? session.getAttribute("profileName") : "Guest" );
      out.write("&background=random\" alt=\"User avatar\">\n");
      out.write("            </div>\n");
      out.write("            <div class=\"user-info\">\n");
      out.write("              <div class=\"user-name\">");
      out.print( session.getAttribute("profileName") != null ? session.getAttribute("profileName") : "Guest" );
      out.write("</div>\n");
      out.write("              <div class=\"user-email\">");
      out.print( session.getAttribute("userEmail") != null ? session.getAttribute("userEmail") : "guest@example.com" );
      out.write("</div>\n");
      out.write("            </div>\n");
      out.write("            <button class=\"user-menu\" aria-label=\"User menu\">\n");
      out.write("              <i class=\"fas fa-ellipsis-v\"></i>\n");
      out.write("            </button>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("        <button class=\"compose-btn\" id=\"composeBtn\" aria-label=\"Compose new email\">\n");
      out.write("          <i class=\"fas fa-plus\"></i>\n");
      out.write("          <span>Compose</span>\n");
      out.write("        </button>\n");
      out.write("        <nav class=\"sidebar-nav\" aria-label=\"Email navigation\">\n");
      out.write("          <ul>\n");
      out.write("            <li class=\"active\"><a href=\"inbox\" aria-label=\"Inbox\">Inbox</a></li>\n");
      out.write("            <li><a href=\"#\" aria-label=\"Starred emails\">Starred</a></li>\n");
      out.write("            <li><a href=\"#\" aria-label=\"Snoozed emails\">Snoozed</a></li>\n");
      out.write("            <li><a href=\"#\" aria-label=\"Important emails\">Important</a></li>\n");
      out.write("            <li><a href=\"#\" aria-label=\"Sent emails\">Sent</a></li>\n");
      out.write("            <li><a href=\"#\" aria-label=\"Drafts\">Drafts</a></li>\n");
      out.write("            <li><a href=\"#\" aria-label=\"Scheduled emails\">Scheduled</a></li>\n");
      out.write("            <li><a href=\"#\" aria-label=\"All mail\">All Mail</a></li>\n");
      out.write("            <li><a href=\"#\" aria-label=\"Spam\">Spam</a></li>\n");
      out.write("            <li><a href=\"#\" aria-label=\"Trash\">Trash</a></li>\n");
      out.write("            <li><a href=\"#\" aria-label=\"Manage labels\">Manage Labels</a></li>\n");
      out.write("            <li><a href=\"#\" aria-label=\"Feedback\">Feedback</a></li>\n");
      out.write("            <li><a href=\"logout\" aria-label=\"Logout\">Logout</a></li>\n");
      out.write("          </ul>\n");
      out.write("        </nav>\n");
      out.write("      </aside>\n");
      out.write("\n");
      out.write("      <!-- Email Content -->\n");
      out.write("      <main class=\"email-content\" aria-label=\"Email content\">\n");
      out.write("        <div class=\"email-toolbar\">\n");
      out.write("          <div class=\"toolbar-left\">\n");
      out.write("            <div class=\"checkbox-container\">\n");
      out.write("              <input type=\"checkbox\" id=\"selectAll\" aria-label=\"Select all emails\">\n");
      out.write("              <label for=\"selectAll\"></label>\n");
      out.write("            </div>\n");
      out.write("            <button class=\"toolbar-btn\" aria-label=\"Refresh emails\">\n");
      out.write("              <i class=\"fas fa-redo\"></i>\n");
      out.write("            </button>\n");
      out.write("            <button class=\"toolbar-btn\" aria-label=\"More actions\">\n");
      out.write("              <i class=\"fas fa-ellipsis-v\"></i>\n");
      out.write("            </button>\n");
      out.write("          </div>\n");
      out.write("          <div class=\"toolbar-right\">\n");
      out.write("            <span class=\"pagination-info\">1-50 of 1,234</span>\n");
      out.write("            <button class=\"toolbar-btn\" aria-label=\"Previous page\">\n");
      out.write("              <i class=\"fas fa-chevron-left\"></i>\n");
      out.write("            </button>\n");
      out.write("            <button class=\"toolbar-btn\" aria-label=\"Next page\">\n");
      out.write("              <i class=\"fas fa-chevron-right\"></i>\n");
      out.write("            </button>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"email-list\">\n");
      out.write("          ");
      out.write("\n");
      out.write("          ");

            class StaticEmail {
              String from, subject, date, body;
              StaticEmail(String f, String s, String d, String b) {
                from = f; subject = s; date = d; body = b;
              }
            }
            List<StaticEmail> staticEmails = List.of(
              new StaticEmail("john@example.com", "Welcome to Inthread!", "2025-05-18", "Hello there!\nThanks for joining Inthread."),
              new StaticEmail("admin@inthread.com", "System Update Notice", "2025-05-17", "A scheduled maintenance will occur tomorrow."),
              new StaticEmail("boss@company.com", "Project Deadline Reminder", "2025-05-16", "Please complete the report by EOD."),
              new StaticEmail("news@techdaily.com", "Tech Weekly Digest", "2025-05-15", "Here's your weekly dose of tech news."),
              new StaticEmail("alerts@bank.com", "Transaction Alert", "2025-05-14", "You spent $230 on your card."),
              new StaticEmail("jane@friends.com", "Weekend Plans", "2025-05-13", "Let's meet at 6 PM for dinner."),
              new StaticEmail("sales@onlinestore.com", "Your Order #12345", "2025-05-12", "Your order has been shipped."),
              new StaticEmail("support@inthread.com", "Support Ticket Closed", "2025-05-11", "Your support ticket has been resolved."),
              new StaticEmail("invite@events.com", "You're Invited!", "2025-05-10", "Join us for the annual gala night."),
              new StaticEmail("hr@company.com", "Policy Update", "2025-05-09", "Please review the updated company policies.")
            );
            int index = 0;
            for (StaticEmail mail : staticEmails) {
          
      out.write("\n");
      out.write("              <div class=\"email-item\" style=\"border-bottom: 1px solid #ddd; padding: 10px; cursor: pointer;\"\n");
      out.write("                   data-subject=\"");
      out.print( mail.subject.replace("\"", "") );
      out.write("\"\n");
      out.write("                   data-from=\"");
      out.print( mail.from.replace("\"", "") );
      out.write("\"\n");
      out.write("                   data-date=\"");
      out.print( mail.date );
      out.write("\"\n");
      out.write("                   data-body=\"");
      out.print( mail.body.replace("\"", "").replace("\n", "<br>") );
      out.write("\">\n");
      out.write("                <div class=\"email-from\"><strong>From:</strong> ");
      out.print( mail.from );
      out.write("</div>\n");
      out.write("                <div class=\"email-subject\"><strong>Subject:</strong> ");
      out.print( mail.subject );
      out.write("</div>\n");
      out.write("                <div class=\"email-date\"><strong>Date:</strong> ");
      out.print( mail.date );
      out.write("</div>\n");
      out.write("              </div>\n");
      out.write("          ");

              index++;
            }
          
      out.write("\n");
      out.write("        </div>\n");
      out.write("      </main>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- Compose Modal -->\n");
      out.write("    <div class=\"compose-modal\" id=\"composeModal\" aria-hidden=\"true\">\n");
      out.write("      <div class=\"compose-content\">\n");
      out.write("        <div class=\"compose-header\">\n");
      out.write("          <h3>New Message</h3>\n");
      out.write("          <button class=\"compose-close\" id=\"closeCompose\" aria-label=\"Close compose window\">\n");
      out.write("            <i class=\"fas fa-times\"></i>\n");
      out.write("          </button>\n");
      out.write("        </div>\n");
      out.write("        <form method=\"post\" action=\"send\" class=\"compose-form\" id=\"composeForm\">\n");
      out.write("          <input type=\"hidden\" name=\"csrfToken\" value=\"");
      out.print( session.getAttribute("csrfToken") != null ? session.getAttribute("csrfToken") : "" );
      out.write("\" />\n");
      out.write("          <input type=\"hidden\" name=\"body\" id=\"emailBody\" />\n");
      out.write("          <div class=\"compose-field\">\n");
      out.write("            <input type=\"email\" name=\"to\" placeholder=\"To\" required aria-label=\"Recipient email\">\n");
      out.write("            <button type=\"button\" class=\"compose-cc-bcc\" aria-label=\"Show Cc and Bcc fields\">Cc/Bcc</button>\n");
      out.write("          </div>\n");
      out.write("          <div class=\"compose-field\">\n");
      out.write("            <input type=\"text\" name=\"subject\" placeholder=\"Subject\" required aria-label=\"Email subject\">\n");
      out.write("          </div>\n");
      out.write("          <div class=\"compose-editor\" contenteditable=\"true\" aria-label=\"Email body\" id=\"composeEditor\"></div>\n");
      out.write("          <div class=\"compose-footer\">\n");
      out.write("            <div class=\"compose-tools\">\n");
      out.write("              <button type=\"button\" class=\"compose-tool-btn\" aria-label=\"Attach file\">\n");
      out.write("                <i class=\"fas fa-paperclip\"></i>\n");
      out.write("              </button>\n");
      out.write("              <button type=\"button\" class=\"compose-tool-btn\" aria-label=\"Insert link\">\n");
      out.write("                <i class=\"fas fa-link\"></i>\n");
      out.write("              </button>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"form-buttons\">\n");
      out.write("              <button type=\"submit\" class=\"compose-send\" aria-label=\"Send email\">Send</button>\n");
      out.write("              <button type=\"button\" class=\"compose-discard\" id=\"discardCompose\" aria-label=\"Discard email\">Discard</button>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("        </form>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- Quick Settings Panel -->\n");
      out.write("    <div class=\"quick-settings\" id=\"quickSettings\" aria-hidden=\"true\">\n");
      out.write("      <div class=\"settings-header\">\n");
      out.write("        <h4>Quick Settings</h4>\n");
      out.write("        <button class=\"settings-close\" id=\"closeSettings\" aria-label=\"Close settings\">\n");
      out.write("          <i class=\"fas fa-times\"></i>\n");
      out.write("        </button>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"settings-content\">\n");
      out.write("        <div class=\"settings-section\">\n");
      out.write("          <h5>Theme</h5>\n");
      out.write("          <div class=\"theme-options\">\n");
      out.write("            <button class=\"theme-option light active\" data-theme=\"light\" aria-label=\"Light theme\">\n");
      out.write("              <i class=\"fas fa-sun\"></i> Light\n");
      out.write("            </button>\n");
      out.write("            <button class=\"theme-option dark\" data-theme=\"dark\" aria-label=\"Dark theme\">\n");
      out.write("              <i class=\"fas fa-moon\"></i> Dark\n");
      out.write("            </button>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"settings-section\">\n");
      out.write("          <h5>Inbox Type</h5>\n");
      out.write("          <select class=\"inbox-type-select\" aria-label=\"Select inbox type\">\n");
      out.write("            <option>Default</option>\n");
      out.write("            <option>Important First</option>\n");
      out.write("            <option>Unread First</option>\n");
      out.write("            <option>Starred First</option>\n");
      out.write("          </select>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("\n");
      out.write("  <script src=\"css/new.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
